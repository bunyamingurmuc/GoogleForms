// <auto-generated />
using System;
using GoogleForms.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GoogleForms.DAL.Migrations
{
    [DbContext(typeof(GoogleFormsContext))]
    [Migration("20220804055215_deneme")]
    partial class deneme
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GoogleForms.Entities.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 8, 4, 8, 52, 14, 867, DateTimeKind.Local).AddTicks(1910),
                            Description = "Deneme Cevabı 1",
                            IsDeleted = false,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 8, 4, 8, 52, 14, 867, DateTimeKind.Local).AddTicks(1911),
                            Description = "Deneme Cevabı 1",
                            IsDeleted = false,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 8, 4, 8, 52, 14, 867, DateTimeKind.Local).AddTicks(1912),
                            Description = "Deneme Cevabı 1",
                            IsDeleted = false,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 8, 4, 8, 52, 14, 867, DateTimeKind.Local).AddTicks(1913),
                            Description = "Deneme Cevabı 1",
                            IsDeleted = false,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2022, 8, 4, 8, 52, 14, 867, DateTimeKind.Local).AddTicks(1913),
                            Description = "Deneme Cevabı 1",
                            IsDeleted = false,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2022, 8, 4, 8, 52, 14, 867, DateTimeKind.Local).AddTicks(1914),
                            Description = "Deneme Cevabı 1",
                            IsDeleted = false,
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2022, 8, 4, 8, 52, 14, 867, DateTimeKind.Local).AddTicks(1915),
                            Description = "Deneme Cevabı 1",
                            IsDeleted = false,
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2022, 8, 4, 8, 52, 14, 867, DateTimeKind.Local).AddTicks(1915),
                            Description = "Deneme Cevabı 1",
                            IsDeleted = false,
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2022, 8, 4, 8, 52, 14, 867, DateTimeKind.Local).AddTicks(1916),
                            Description = "Deneme Cevabı 1",
                            IsDeleted = false,
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2022, 8, 4, 8, 52, 14, 867, DateTimeKind.Local).AddTicks(1917),
                            Description = "Deneme Cevabı 1",
                            IsDeleted = false,
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2022, 8, 4, 8, 52, 14, 867, DateTimeKind.Local).AddTicks(1917),
                            Description = "Deneme Cevabı 1",
                            IsDeleted = false,
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2022, 8, 4, 8, 52, 14, 867, DateTimeKind.Local).AddTicks(1962),
                            Description = "Deneme Cevabı 1",
                            IsDeleted = false,
                            QuestionId = 4
                        });
                });

            modelBuilder.Entity("GoogleForms.Entities.Form", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FormDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Forms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 8, 4, 8, 52, 14, 867, DateTimeKind.Local).AddTicks(1680),
                            FormDescription = "Deneme Formu Açıklaması1",
                            FormTitle = "Deneme Formu Başlığı2",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 8, 4, 8, 52, 14, 867, DateTimeKind.Local).AddTicks(1690),
                            FormDescription = "Deneme Formu Açıklaması2",
                            FormTitle = "Deneme Formu Başlığı2",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("GoogleForms.Entities.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<string>("QuestionTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 8, 4, 8, 52, 14, 867, DateTimeKind.Local).AddTicks(1844),
                            FormId = 1,
                            IsDeleted = false,
                            IsRequired = false,
                            QuestionTitle = "Deneme Sorusu1 ",
                            QuestionType = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 8, 4, 8, 52, 14, 867, DateTimeKind.Local).AddTicks(1847),
                            FormId = 1,
                            IsDeleted = false,
                            IsRequired = false,
                            QuestionTitle = "Deneme Sorusu1 ",
                            QuestionType = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 8, 4, 8, 52, 14, 867, DateTimeKind.Local).AddTicks(1848),
                            FormId = 2,
                            IsDeleted = false,
                            IsRequired = false,
                            QuestionTitle = "Deneme Sorusu1 ",
                            QuestionType = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 8, 4, 8, 52, 14, 867, DateTimeKind.Local).AddTicks(1849),
                            FormId = 2,
                            IsDeleted = false,
                            IsRequired = false,
                            QuestionTitle = "Deneme Sorusu1 ",
                            QuestionType = 3
                        });
                });

            modelBuilder.Entity("GoogleForms.Entities.Answer", b =>
                {
                    b.HasOne("GoogleForms.Entities.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("GoogleForms.Entities.Question", b =>
                {
                    b.HasOne("GoogleForms.Entities.Form", "Form")
                        .WithMany("Questions")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");
                });

            modelBuilder.Entity("GoogleForms.Entities.Form", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("GoogleForms.Entities.Question", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
